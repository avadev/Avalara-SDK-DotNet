/*
 * AvaTax Software Development Kit for C#
 *
 * (c) 2004-2022 Avalara, Inc.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 *
 * Avalara 1099 API Definition
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *

 * @author     Sachin Baijal <sachin.baijal@avalara.com>
 * @author     Jonathan Wenger <jonathan.wenger@avalara.com>
 * @copyright  2004-2022 Avalara, Inc.
 * @license    https://www.apache.org/licenses/LICENSE-2.0
 * @link       https://github.com/avadev/AvaTax-REST-V3-DotNet-SDK
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = Avalara.SDK.Client.FileParameter;
using OpenAPIDateConverter = Avalara.SDK.Client.OpenAPIDateConverter;

namespace Avalara.SDK.Model.Track1099.V2
{
/// <summary>
    /// W-8 BEN-E form
    /// </summary>
    [DataContract(Name = "W8BeneFormDataModel")]
    public partial class W8BeneFormDataModel : IValidatableObject
    {
        /// <summary>
        /// Type of the form, always W8BENE for this model.
        /// </summary>
        /// <value>Type of the form, always W8BENE for this model.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            /// <summary>
            /// Enum W9 for value: w9
            /// </summary>
            [EnumMember(Value = "w9")]
            W9 = 1,

            /// <summary>
            /// Enum W4 for value: w4
            /// </summary>
            [EnumMember(Value = "w4")]
            W4 = 2,

            /// <summary>
            /// Enum W8imy for value: w8imy
            /// </summary>
            [EnumMember(Value = "w8imy")]
            W8imy = 3,

            /// <summary>
            /// Enum W8ben for value: w8ben
            /// </summary>
            [EnumMember(Value = "w8ben")]
            W8ben = 4,

            /// <summary>
            /// Enum W8bene for value: w8bene
            /// </summary>
            [EnumMember(Value = "w8bene")]
            W8bene = 5
        }


        /// <summary>
        /// Type of the form, always W8BENE for this model.
        /// </summary>
        /// <value>Type of the form, always W8BENE for this model.</value>
        /// <example>w8bene</example>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public TypeEnum? Type { get; set; }

        /// <summary>
        /// Returns false as Type should not be serialized given that it's read-only.
        /// </summary>
        /// <returns>false (boolean)</returns>
        public bool ShouldSerializeType()
        {
            return false;
        }
        /// <summary>
        /// Initializes a new instance of the <see cref="W8BeneFormDataModel" /> class.
        /// </summary>
        /// <param name="signedDate">The date the form was signed..</param>
        /// <param name="disregardedEntityChapter4FatcaStatus">The FATCA status for disregarded entities under Chapter 4..</param>
        /// <param name="archived">Indicates whether the form is archived..</param>
        /// <param name="referenceId">A reference identifier for the form..</param>
        /// <param name="companyId">The ID of the associated company..</param>
        /// <param name="createdAt">The creation date of the form..</param>
        /// <param name="updatedAt">The last updated date of the form..</param>
        /// <param name="displayName">The display name associated with the form..</param>
        /// <param name="email">The email address of the individual associated with the form..</param>
        /// <param name="name">The name of the individual or entity associated with the form..</param>
        /// <param name="residenceAddress">The residential address of the individual or entity..</param>
        /// <param name="residenceCity">The city of residence..</param>
        /// <param name="residenceState">The state of residence..</param>
        /// <param name="residencePostalCode">The postal code of the residence..</param>
        /// <param name="residenceCountry">The country of residence..</param>
        /// <param name="mailingAddress">The mailing address..</param>
        /// <param name="mailingCity">The city of the mailing address..</param>
        /// <param name="mailingState">The state of the mailing address..</param>
        /// <param name="mailingPostalCode">The postal code of the mailing address..</param>
        /// <param name="mailingCountry">The country of the mailing address..</param>
        /// <param name="disregardedAddress">The address for disregarded entities..</param>
        /// <param name="disregardedCity">The city for disregarded entities..</param>
        /// <param name="disregardedState">The state for disregarded entities..</param>
        /// <param name="disregardedPostalCode">The postal code for disregarded entities..</param>
        /// <param name="disregardedCountry">The country for disregarded entities..</param>
        /// <param name="tin">The taxpayer identification number (TIN)..</param>
        /// <param name="foreignTin">The foreign taxpayer identification number (TIN)..</param>
        /// <param name="ftinNotRequired">Indicates whether a foreign TIN is not required..</param>
        /// <param name="referenceNumber">A reference number for the form..</param>
        /// <param name="giin">The global intermediary identification number (GIIN)..</param>
        /// <param name="chapter3EntityType">The Chapter 3 entity type..</param>
        /// <param name="chapter4FatcaStatus">The Chapter 4 FATCA status..</param>
        /// <param name="disregardedEntity">The disregarded entity information..</param>
        /// <param name="disregardedEntityGiin">The GIIN for disregarded entities..</param>
        /// <param name="benefitLimitation">The benefit limitation for tax treaty claims..</param>
        /// <param name="part4SponsoringEntity">The sponsoring entity information for Part 4..</param>
        /// <param name="part4SponsoringEntityGiin">The GIIN for the sponsoring entity in Part 4..</param>
        /// <param name="part7SponsoringEntity">The sponsoring entity information for Part 7..</param>
        /// <param name="part12IgaCountry">The IGA country information for Part 12..</param>
        /// <param name="part12IgaType">The IGA type information for Part 12..</param>
        /// <param name="part12FatcaStatusUnderIgaAnnexIi">The FATCA status under IGA Annex II for Part 12..</param>
        /// <param name="part12TrusteeName">The trustee name for Part 12..</param>
        /// <param name="part12TrusteeIsForeign">Indicates whether the trustee is foreign for Part 12..</param>
        /// <param name="part12Model2IgaGiin">The GIIN for Model 2 IGA in Part 12..</param>
        /// <param name="box37AExchange">The exchange information for Box 37A..</param>
        /// <param name="box37BExchange">The exchange information for Box 37B..</param>
        /// <param name="box37BEntity">The entity information for Box 37B..</param>
        /// <param name="part28SponsoringEntity">The sponsoring entity information for Part 28..</param>
        /// <param name="part28SponsoringEntityGiin">The GIIN for the sponsoring entity in Part 28..</param>
        /// <param name="signerName">The name of the signer..</param>
        /// <param name="eDeliveryConsentedAt">The date when e-delivery was consented..</param>
        /// <param name="id">id.</param>
        /// <param name="entryStatus">entryStatus.</param>
        public W8BeneFormDataModel(DateTime? signedDate = default(DateTime?), string disregardedEntityChapter4FatcaStatus = default(string), bool? archived = default(bool?), string referenceId = default(string), int? companyId = default(int?), DateTime? createdAt = default(DateTime?), DateTime? updatedAt = default(DateTime?), string displayName = default(string), string email = default(string), string name = default(string), string residenceAddress = default(string), string residenceCity = default(string), string residenceState = default(string), string residencePostalCode = default(string), string residenceCountry = default(string), string mailingAddress = default(string), string mailingCity = default(string), string mailingState = default(string), string mailingPostalCode = default(string), string mailingCountry = default(string), string disregardedAddress = default(string), string disregardedCity = default(string), string disregardedState = default(string), string disregardedPostalCode = default(string), string disregardedCountry = default(string), string tin = default(string), string foreignTin = default(string), bool? ftinNotRequired = default(bool?), string referenceNumber = default(string), string giin = default(string), string chapter3EntityType = default(string), string chapter4FatcaStatus = default(string), string disregardedEntity = default(string), string disregardedEntityGiin = default(string), string benefitLimitation = default(string), string part4SponsoringEntity = default(string), string part4SponsoringEntityGiin = default(string), string part7SponsoringEntity = default(string), string part12IgaCountry = default(string), string part12IgaType = default(string), string part12FatcaStatusUnderIgaAnnexIi = default(string), string part12TrusteeName = default(string), bool? part12TrusteeIsForeign = default(bool?), string part12Model2IgaGiin = default(string), string box37AExchange = default(string), string box37BExchange = default(string), string box37BEntity = default(string), string part28SponsoringEntity = default(string), string part28SponsoringEntityGiin = default(string), string signerName = default(string), DateTime? eDeliveryConsentedAt = default(DateTime?), int id = default(int), string entryStatus = default(string))
        {
            this.SignedDate = signedDate;
            this.DisregardedEntityChapter4FatcaStatus = disregardedEntityChapter4FatcaStatus;
            this.Archived = archived;
            this.ReferenceId = referenceId;
            this.CompanyId = companyId;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
            this.DisplayName = displayName;
            this.Email = email;
            this.Name = name;
            this.ResidenceAddress = residenceAddress;
            this.ResidenceCity = residenceCity;
            this.ResidenceState = residenceState;
            this.ResidencePostalCode = residencePostalCode;
            this.ResidenceCountry = residenceCountry;
            this.MailingAddress = mailingAddress;
            this.MailingCity = mailingCity;
            this.MailingState = mailingState;
            this.MailingPostalCode = mailingPostalCode;
            this.MailingCountry = mailingCountry;
            this.DisregardedAddress = disregardedAddress;
            this.DisregardedCity = disregardedCity;
            this.DisregardedState = disregardedState;
            this.DisregardedPostalCode = disregardedPostalCode;
            this.DisregardedCountry = disregardedCountry;
            this.Tin = tin;
            this.ForeignTin = foreignTin;
            this.FtinNotRequired = ftinNotRequired;
            this.ReferenceNumber = referenceNumber;
            this.Giin = giin;
            this.Chapter3EntityType = chapter3EntityType;
            this.Chapter4FatcaStatus = chapter4FatcaStatus;
            this.DisregardedEntity = disregardedEntity;
            this.DisregardedEntityGiin = disregardedEntityGiin;
            this.BenefitLimitation = benefitLimitation;
            this.Part4SponsoringEntity = part4SponsoringEntity;
            this.Part4SponsoringEntityGiin = part4SponsoringEntityGiin;
            this.Part7SponsoringEntity = part7SponsoringEntity;
            this.Part12IgaCountry = part12IgaCountry;
            this.Part12IgaType = part12IgaType;
            this.Part12FatcaStatusUnderIgaAnnexIi = part12FatcaStatusUnderIgaAnnexIi;
            this.Part12TrusteeName = part12TrusteeName;
            this.Part12TrusteeIsForeign = part12TrusteeIsForeign;
            this.Part12Model2IgaGiin = part12Model2IgaGiin;
            this.Box37AExchange = box37AExchange;
            this.Box37BExchange = box37BExchange;
            this.Box37BEntity = box37BEntity;
            this.Part28SponsoringEntity = part28SponsoringEntity;
            this.Part28SponsoringEntityGiin = part28SponsoringEntityGiin;
            this.SignerName = signerName;
            this.EDeliveryConsentedAt = eDeliveryConsentedAt;
            this.Id = id;
            this.EntryStatus = entryStatus;
        }

        /// <summary>
        /// The date the form was signed.
        /// </summary>
        /// <value>The date the form was signed.</value>
        /// <example>2022-04-29T00:00Z</example>
        [DataMember(Name = "signedDate", EmitDefaultValue = true)]
        public DateTime? SignedDate { get; set; }

        /// <summary>
        /// The FATCA status for disregarded entities under Chapter 4.
        /// </summary>
        /// <value>The FATCA status for disregarded entities under Chapter 4.</value>
        [DataMember(Name = "disregardedEntityChapter4FatcaStatus", EmitDefaultValue = true)]
        public string DisregardedEntityChapter4FatcaStatus { get; set; }

        /// <summary>
        /// Indicates whether the form is archived.
        /// </summary>
        /// <value>Indicates whether the form is archived.</value>
        /// <example>false</example>
        [DataMember(Name = "archived", EmitDefaultValue = true)]
        public bool? Archived { get; set; }

        /// <summary>
        /// A reference identifier for the form.
        /// </summary>
        /// <value>A reference identifier for the form.</value>
        /// <example>REF98765</example>
        [DataMember(Name = "referenceId", EmitDefaultValue = true)]
        public string ReferenceId { get; set; }

        /// <summary>
        /// The ID of the associated company.
        /// </summary>
        /// <value>The ID of the associated company.</value>
        /// <example>3003</example>
        [DataMember(Name = "companyId", EmitDefaultValue = true)]
        public int? CompanyId { get; set; }

        /// <summary>
        /// The creation date of the form.
        /// </summary>
        /// <value>The creation date of the form.</value>
        /// <example>2022-04-29T10:00Z</example>
        [DataMember(Name = "createdAt", EmitDefaultValue = true)]
        public DateTime? CreatedAt { get; set; }

        /// <summary>
        /// The last updated date of the form.
        /// </summary>
        /// <value>The last updated date of the form.</value>
        /// <example>2022-05-01T11:30Z</example>
        [DataMember(Name = "updatedAt", EmitDefaultValue = true)]
        public DateTime? UpdatedAt { get; set; }

        /// <summary>
        /// The display name associated with the form.
        /// </summary>
        /// <value>The display name associated with the form.</value>
        /// <example>Global Enterprises</example>
        [DataMember(Name = "displayName", EmitDefaultValue = true)]
        public string DisplayName { get; set; }

        /// <summary>
        /// The email address of the individual associated with the form.
        /// </summary>
        /// <value>The email address of the individual associated with the form.</value>
        /// <example>contact@globalenterprises.com</example>
        [DataMember(Name = "email", EmitDefaultValue = true)]
        public string Email { get; set; }

        /// <summary>
        /// The name of the individual or entity associated with the form.
        /// </summary>
        /// <value>The name of the individual or entity associated with the form.</value>
        /// <example>Global Enterprises LLC</example>
        [DataMember(Name = "name", EmitDefaultValue = true)]
        public string Name { get; set; }

        /// <summary>
        /// The residential address of the individual or entity.
        /// </summary>
        /// <value>The residential address of the individual or entity.</value>
        /// <example>123 International Blvd</example>
        [DataMember(Name = "residenceAddress", EmitDefaultValue = true)]
        public string ResidenceAddress { get; set; }

        /// <summary>
        /// The city of residence.
        /// </summary>
        /// <value>The city of residence.</value>
        /// <example>Metropolis</example>
        [DataMember(Name = "residenceCity", EmitDefaultValue = true)]
        public string ResidenceCity { get; set; }

        /// <summary>
        /// The state of residence.
        /// </summary>
        /// <value>The state of residence.</value>
        /// <example>NY</example>
        [DataMember(Name = "residenceState", EmitDefaultValue = true)]
        public string ResidenceState { get; set; }

        /// <summary>
        /// The postal code of the residence.
        /// </summary>
        /// <value>The postal code of the residence.</value>
        /// <example>10118</example>
        [DataMember(Name = "residencePostalCode", EmitDefaultValue = true)]
        public string ResidencePostalCode { get; set; }

        /// <summary>
        /// The country of residence.
        /// </summary>
        /// <value>The country of residence.</value>
        /// <example>USA</example>
        [DataMember(Name = "residenceCountry", EmitDefaultValue = true)]
        public string ResidenceCountry { get; set; }

        /// <summary>
        /// The mailing address.
        /// </summary>
        /// <value>The mailing address.</value>
        /// <example>P.O. Box 123</example>
        [DataMember(Name = "mailingAddress", EmitDefaultValue = true)]
        public string MailingAddress { get; set; }

        /// <summary>
        /// The city of the mailing address.
        /// </summary>
        /// <value>The city of the mailing address.</value>
        /// <example>Metropolis</example>
        [DataMember(Name = "mailingCity", EmitDefaultValue = true)]
        public string MailingCity { get; set; }

        /// <summary>
        /// The state of the mailing address.
        /// </summary>
        /// <value>The state of the mailing address.</value>
        /// <example>NY</example>
        [DataMember(Name = "mailingState", EmitDefaultValue = true)]
        public string MailingState { get; set; }

        /// <summary>
        /// The postal code of the mailing address.
        /// </summary>
        /// <value>The postal code of the mailing address.</value>
        /// <example>10119</example>
        [DataMember(Name = "mailingPostalCode", EmitDefaultValue = true)]
        public string MailingPostalCode { get; set; }

        /// <summary>
        /// The country of the mailing address.
        /// </summary>
        /// <value>The country of the mailing address.</value>
        /// <example>USA</example>
        [DataMember(Name = "mailingCountry", EmitDefaultValue = true)]
        public string MailingCountry { get; set; }

        /// <summary>
        /// The address for disregarded entities.
        /// </summary>
        /// <value>The address for disregarded entities.</value>
        [DataMember(Name = "disregardedAddress", EmitDefaultValue = true)]
        public string DisregardedAddress { get; set; }

        /// <summary>
        /// The city for disregarded entities.
        /// </summary>
        /// <value>The city for disregarded entities.</value>
        [DataMember(Name = "disregardedCity", EmitDefaultValue = true)]
        public string DisregardedCity { get; set; }

        /// <summary>
        /// The state for disregarded entities.
        /// </summary>
        /// <value>The state for disregarded entities.</value>
        [DataMember(Name = "disregardedState", EmitDefaultValue = true)]
        public string DisregardedState { get; set; }

        /// <summary>
        /// The postal code for disregarded entities.
        /// </summary>
        /// <value>The postal code for disregarded entities.</value>
        [DataMember(Name = "disregardedPostalCode", EmitDefaultValue = true)]
        public string DisregardedPostalCode { get; set; }

        /// <summary>
        /// The country for disregarded entities.
        /// </summary>
        /// <value>The country for disregarded entities.</value>
        [DataMember(Name = "disregardedCountry", EmitDefaultValue = true)]
        public string DisregardedCountry { get; set; }

        /// <summary>
        /// The taxpayer identification number (TIN).
        /// </summary>
        /// <value>The taxpayer identification number (TIN).</value>
        /// <example>12-3456789</example>
        [DataMember(Name = "tin", EmitDefaultValue = true)]
        public string Tin { get; set; }

        /// <summary>
        /// The foreign taxpayer identification number (TIN).
        /// </summary>
        /// <value>The foreign taxpayer identification number (TIN).</value>
        [DataMember(Name = "foreignTin", EmitDefaultValue = true)]
        public string ForeignTin { get; set; }

        /// <summary>
        /// Indicates whether a foreign TIN is not required.
        /// </summary>
        /// <value>Indicates whether a foreign TIN is not required.</value>
        [DataMember(Name = "ftinNotRequired", EmitDefaultValue = true)]
        public bool? FtinNotRequired { get; set; }

        /// <summary>
        /// A reference number for the form.
        /// </summary>
        /// <value>A reference number for the form.</value>
        /// <example>W8BENE12345</example>
        [DataMember(Name = "referenceNumber", EmitDefaultValue = true)]
        public string ReferenceNumber { get; set; }

        /// <summary>
        /// The global intermediary identification number (GIIN).
        /// </summary>
        /// <value>The global intermediary identification number (GIIN).</value>
        /// <example>GIIN12345678</example>
        [DataMember(Name = "giin", EmitDefaultValue = true)]
        public string Giin { get; set; }

        /// <summary>
        /// The Chapter 3 entity type.
        /// </summary>
        /// <value>The Chapter 3 entity type.</value>
        /// <example>Corporation</example>
        [DataMember(Name = "chapter3EntityType", EmitDefaultValue = true)]
        public string Chapter3EntityType { get; set; }

        /// <summary>
        /// The Chapter 4 FATCA status.
        /// </summary>
        /// <value>The Chapter 4 FATCA status.</value>
        /// <example>Active</example>
        [DataMember(Name = "chapter4FatcaStatus", EmitDefaultValue = true)]
        public string Chapter4FatcaStatus { get; set; }

        /// <summary>
        /// The disregarded entity information.
        /// </summary>
        /// <value>The disregarded entity information.</value>
        /// <example>Subsidiary LLC</example>
        [DataMember(Name = "disregardedEntity", EmitDefaultValue = true)]
        public string DisregardedEntity { get; set; }

        /// <summary>
        /// The GIIN for disregarded entities.
        /// </summary>
        /// <value>The GIIN for disregarded entities.</value>
        /// <example>GIIN87654321</example>
        [DataMember(Name = "disregardedEntityGiin", EmitDefaultValue = true)]
        public string DisregardedEntityGiin { get; set; }

        /// <summary>
        /// The benefit limitation for tax treaty claims.
        /// </summary>
        /// <value>The benefit limitation for tax treaty claims.</value>
        /// <example>Treaty Benefit</example>
        [DataMember(Name = "benefitLimitation", EmitDefaultValue = true)]
        public string BenefitLimitation { get; set; }

        /// <summary>
        /// The sponsoring entity information for Part 4.
        /// </summary>
        /// <value>The sponsoring entity information for Part 4.</value>
        /// <example>Parent Company</example>
        [DataMember(Name = "part4SponsoringEntity", EmitDefaultValue = true)]
        public string Part4SponsoringEntity { get; set; }

        /// <summary>
        /// The GIIN for the sponsoring entity in Part 4.
        /// </summary>
        /// <value>The GIIN for the sponsoring entity in Part 4.</value>
        /// <example>GIIN11223344</example>
        [DataMember(Name = "part4SponsoringEntityGiin", EmitDefaultValue = true)]
        public string Part4SponsoringEntityGiin { get; set; }

        /// <summary>
        /// The sponsoring entity information for Part 7.
        /// </summary>
        /// <value>The sponsoring entity information for Part 7.</value>
        /// <example>Affiliated Organization</example>
        [DataMember(Name = "part7SponsoringEntity", EmitDefaultValue = true)]
        public string Part7SponsoringEntity { get; set; }

        /// <summary>
        /// The IGA country information for Part 12.
        /// </summary>
        /// <value>The IGA country information for Part 12.</value>
        /// <example>USA</example>
        [DataMember(Name = "part12IgaCountry", EmitDefaultValue = true)]
        public string Part12IgaCountry { get; set; }

        /// <summary>
        /// The IGA type information for Part 12.
        /// </summary>
        /// <value>The IGA type information for Part 12.</value>
        /// <example>Model 1</example>
        [DataMember(Name = "part12IgaType", EmitDefaultValue = true)]
        public string Part12IgaType { get; set; }

        /// <summary>
        /// The FATCA status under IGA Annex II for Part 12.
        /// </summary>
        /// <value>The FATCA status under IGA Annex II for Part 12.</value>
        /// <example>Registered Deemed Compliant</example>
        [DataMember(Name = "part12FatcaStatusUnderIgaAnnexIi", EmitDefaultValue = true)]
        public string Part12FatcaStatusUnderIgaAnnexIi { get; set; }

        /// <summary>
        /// The trustee name for Part 12.
        /// </summary>
        /// <value>The trustee name for Part 12.</value>
        /// <example>Trustee Inc.</example>
        [DataMember(Name = "part12TrusteeName", EmitDefaultValue = true)]
        public string Part12TrusteeName { get; set; }

        /// <summary>
        /// Indicates whether the trustee is foreign for Part 12.
        /// </summary>
        /// <value>Indicates whether the trustee is foreign for Part 12.</value>
        /// <example>false</example>
        [DataMember(Name = "part12TrusteeIsForeign", EmitDefaultValue = true)]
        public bool? Part12TrusteeIsForeign { get; set; }

        /// <summary>
        /// The GIIN for Model 2 IGA in Part 12.
        /// </summary>
        /// <value>The GIIN for Model 2 IGA in Part 12.</value>
        /// <example>GIIN33445566</example>
        [DataMember(Name = "part12Model2IgaGiin", EmitDefaultValue = true)]
        public string Part12Model2IgaGiin { get; set; }

        /// <summary>
        /// The exchange information for Box 37A.
        /// </summary>
        /// <value>The exchange information for Box 37A.</value>
        /// <example>NYSE</example>
        [DataMember(Name = "box37AExchange", EmitDefaultValue = true)]
        public string Box37AExchange { get; set; }

        /// <summary>
        /// The exchange information for Box 37B.
        /// </summary>
        /// <value>The exchange information for Box 37B.</value>
        /// <example>NASDAQ</example>
        [DataMember(Name = "box37BExchange", EmitDefaultValue = true)]
        public string Box37BExchange { get; set; }

        /// <summary>
        /// The entity information for Box 37B.
        /// </summary>
        /// <value>The entity information for Box 37B.</value>
        /// <example>Trading Partner</example>
        [DataMember(Name = "box37BEntity", EmitDefaultValue = true)]
        public string Box37BEntity { get; set; }

        /// <summary>
        /// The sponsoring entity information for Part 28.
        /// </summary>
        /// <value>The sponsoring entity information for Part 28.</value>
        /// <example>Global Trust</example>
        [DataMember(Name = "part28SponsoringEntity", EmitDefaultValue = true)]
        public string Part28SponsoringEntity { get; set; }

        /// <summary>
        /// The GIIN for the sponsoring entity in Part 28.
        /// </summary>
        /// <value>The GIIN for the sponsoring entity in Part 28.</value>
        /// <example>GIIN99887766</example>
        [DataMember(Name = "part28SponsoringEntityGiin", EmitDefaultValue = true)]
        public string Part28SponsoringEntityGiin { get; set; }

        /// <summary>
        /// The name of the signer.
        /// </summary>
        /// <value>The name of the signer.</value>
        /// <example>John Doe</example>
        [DataMember(Name = "signerName", EmitDefaultValue = true)]
        public string SignerName { get; set; }

        /// <summary>
        /// The date when e-delivery was consented.
        /// </summary>
        /// <value>The date when e-delivery was consented.</value>
        /// <example>2022-04-29T15:30Z</example>
        [DataMember(Name = "eDeliveryConsentedAt", EmitDefaultValue = true)]
        public DateTime? EDeliveryConsentedAt { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public int Id { get; set; }

        /// <summary>
        /// Gets or Sets EntryStatus
        /// </summary>
        [DataMember(Name = "entryStatus", EmitDefaultValue = true)]
        public string EntryStatus { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class W8BeneFormDataModel {\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  SignedDate: ").Append(SignedDate).Append("\n");
            sb.Append("  DisregardedEntityChapter4FatcaStatus: ").Append(DisregardedEntityChapter4FatcaStatus).Append("\n");
            sb.Append("  Archived: ").Append(Archived).Append("\n");
            sb.Append("  ReferenceId: ").Append(ReferenceId).Append("\n");
            sb.Append("  CompanyId: ").Append(CompanyId).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  ResidenceAddress: ").Append(ResidenceAddress).Append("\n");
            sb.Append("  ResidenceCity: ").Append(ResidenceCity).Append("\n");
            sb.Append("  ResidenceState: ").Append(ResidenceState).Append("\n");
            sb.Append("  ResidencePostalCode: ").Append(ResidencePostalCode).Append("\n");
            sb.Append("  ResidenceCountry: ").Append(ResidenceCountry).Append("\n");
            sb.Append("  MailingAddress: ").Append(MailingAddress).Append("\n");
            sb.Append("  MailingCity: ").Append(MailingCity).Append("\n");
            sb.Append("  MailingState: ").Append(MailingState).Append("\n");
            sb.Append("  MailingPostalCode: ").Append(MailingPostalCode).Append("\n");
            sb.Append("  MailingCountry: ").Append(MailingCountry).Append("\n");
            sb.Append("  DisregardedAddress: ").Append(DisregardedAddress).Append("\n");
            sb.Append("  DisregardedCity: ").Append(DisregardedCity).Append("\n");
            sb.Append("  DisregardedState: ").Append(DisregardedState).Append("\n");
            sb.Append("  DisregardedPostalCode: ").Append(DisregardedPostalCode).Append("\n");
            sb.Append("  DisregardedCountry: ").Append(DisregardedCountry).Append("\n");
            sb.Append("  Tin: ").Append(Tin).Append("\n");
            sb.Append("  ForeignTin: ").Append(ForeignTin).Append("\n");
            sb.Append("  FtinNotRequired: ").Append(FtinNotRequired).Append("\n");
            sb.Append("  ReferenceNumber: ").Append(ReferenceNumber).Append("\n");
            sb.Append("  Giin: ").Append(Giin).Append("\n");
            sb.Append("  Chapter3EntityType: ").Append(Chapter3EntityType).Append("\n");
            sb.Append("  Chapter4FatcaStatus: ").Append(Chapter4FatcaStatus).Append("\n");
            sb.Append("  DisregardedEntity: ").Append(DisregardedEntity).Append("\n");
            sb.Append("  DisregardedEntityGiin: ").Append(DisregardedEntityGiin).Append("\n");
            sb.Append("  BenefitLimitation: ").Append(BenefitLimitation).Append("\n");
            sb.Append("  Part4SponsoringEntity: ").Append(Part4SponsoringEntity).Append("\n");
            sb.Append("  Part4SponsoringEntityGiin: ").Append(Part4SponsoringEntityGiin).Append("\n");
            sb.Append("  Part7SponsoringEntity: ").Append(Part7SponsoringEntity).Append("\n");
            sb.Append("  Part12IgaCountry: ").Append(Part12IgaCountry).Append("\n");
            sb.Append("  Part12IgaType: ").Append(Part12IgaType).Append("\n");
            sb.Append("  Part12FatcaStatusUnderIgaAnnexIi: ").Append(Part12FatcaStatusUnderIgaAnnexIi).Append("\n");
            sb.Append("  Part12TrusteeName: ").Append(Part12TrusteeName).Append("\n");
            sb.Append("  Part12TrusteeIsForeign: ").Append(Part12TrusteeIsForeign).Append("\n");
            sb.Append("  Part12Model2IgaGiin: ").Append(Part12Model2IgaGiin).Append("\n");
            sb.Append("  Box37AExchange: ").Append(Box37AExchange).Append("\n");
            sb.Append("  Box37BExchange: ").Append(Box37BExchange).Append("\n");
            sb.Append("  Box37BEntity: ").Append(Box37BEntity).Append("\n");
            sb.Append("  Part28SponsoringEntity: ").Append(Part28SponsoringEntity).Append("\n");
            sb.Append("  Part28SponsoringEntityGiin: ").Append(Part28SponsoringEntityGiin).Append("\n");
            sb.Append("  SignerName: ").Append(SignerName).Append("\n");
            sb.Append("  EDeliveryConsentedAt: ").Append(EDeliveryConsentedAt).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  EntryStatus: ").Append(EntryStatus).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
